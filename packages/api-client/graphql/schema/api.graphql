type Environment implements Node {
  currentVersion: Version
  id: ID!
  name: String!
  project: Project!
  versions(after: String, before: String, first: Int, last: Int): EnvironmentVersionsConnection!
}
type EnvironmentVersionsConnection {
  edges: [EnvironmentVersionsConnectionEdge]!
  pageInfo: PageInfo!
}
type EnvironmentVersionsConnectionEdge {
  cursor: String!
  node: Version!
}
type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}
type Project implements Node {
  environments(after: String, before: String, first: Int, last: Int): ProjectEnvironmentsConnection!
  id: ID!
  name: String!
  services(after: String, before: String, first: Int, last: Int): ProjectServicesConnection!
}
type ProjectEnvironmentsConnection {
  edges: [ProjectEnvironmentsConnectionEdge]!
  pageInfo: PageInfo!
}
type ProjectEnvironmentsConnectionEdge {
  cursor: String!
  node: Environment!
}
type ProjectServicesConnection {
  edges: [ProjectServicesConnectionEdge]!
  pageInfo: PageInfo!
}
type ProjectServicesConnectionEdge {
  cursor: String!
  node: Service!
}
type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  project(id: ID!): [Project!]!
  projects: [Project!]!
}
type Service implements Node {
  currentVersion: ServiceVersion
  id: ID!
  name: String!
  project: Project!
  versions(after: String, before: String, first: Int, last: Int): ServiceVersionsConnection!
}
type ServiceVersion implements Node {
  createdAt: String!
  id: ID!
  isCurrent: Boolean!
  name: String!
  service: Service!
  version: Version!
}
type ServiceVersionsConnection {
  edges: [ServiceVersionsConnectionEdge]!
  pageInfo: PageInfo!
}
type ServiceVersionsConnectionEdge {
  cursor: String!
  node: ServiceVersion!
}
type Version implements Node {
  createdAt: String!
  environment: Environment!
  id: ID!
  isCurrent: Boolean!
  name: String!
  serviceVersions(after: String, before: String, first: Int, last: Int): VersionServiceVersionsConnection!
}
type VersionServiceVersionsConnection {
  edges: [VersionServiceVersionsConnectionEdge]!
  pageInfo: PageInfo!
}
type VersionServiceVersionsConnectionEdge {
  cursor: String!
  node: ServiceVersion!
}
interface Node {
  id: ID!
}
"Exposes a URL that specifies the behavior of this scalar."
directive @specifiedBy(
    "The URL that specifies the behavior of this scalar."
    url: String!
  ) on SCALAR
